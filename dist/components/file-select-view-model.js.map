{"version":3,"file":"file-select-view-model.js","sourceRoot":"","sources":["../../src/components/file-select-view-model.ts"],"names":[],"mappings":"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","sourcesContent":["import { template } from \"../core/template\";\nimport { element } from \"../core/element\";\nimport { bind } from \"../core/bind\";\nimport { ComponentViewModel } from \"../core/component-view-model\";\nimport { inject } from \"@nivinjoseph/n-ject\";\nimport { DialogService } from \"../services/dialog-service/dialog-service\";\nimport { EventAggregator } from \"../services/event-aggregator/event-aggregator\";\nimport { given } from \"@nivinjoseph/n-defensive\";\nimport * as $ from \"jquery\";\nimport { ArgumentException } from \"@nivinjoseph/n-exception\";\n\n// public\nexport interface FileInfo\n{\n    fileName: string;\n    fileType: string;\n    fileSize: number;\n    fileData: string;\n    fileMime: string;\n    fileDataUrl: string;\n    nativeFile: File;\n}\n\n\n@template(\"<span></span>\")\n@element(\"file-select\")\n@bind(\"id\", \"mimeTypes\", \"maxFileSize\", \"multiple\", \"onSelection\")\n@inject(\"DialogService\", \"EventAggregator\")    \nexport class FileSelectViewModel extends ComponentViewModel\n{\n    private readonly _dialogService: DialogService;\n    private readonly _eventAggregator: EventAggregator;\n    private readonly _inputTemplate = `<input type=\"file\" accept=\"{0}\" style=\"display: none\" />`;\n    private readonly  _inputTemplateMultiple = `<input type=\"file\" accept=\"{0}\" multiple style=\"display: none\" />`;\n    private _inputElement: any;\n    private _maxFileSizeBytes: number;\n\n    \n    private get mimeTypesList(): string { return this.getBound(\"mimeTypes\"); }\n    private get maxFileSizeValue(): number { return parseInt(this.getBound(\"maxFileSize\")); }\n    private get isMultiple(): boolean { return this.getBound(\"multiple\") != null && this.getBound(\"multiple\") === \"true\"; }\n\n    \n    public constructor(dialogService: DialogService, eventAggregator: EventAggregator)\n    {\n        super();\n        \n        given(dialogService, \"dialogService\").ensureHasValue().ensureIsObject();\n        this._dialogService = dialogService;\n        \n        given(eventAggregator, \"eventAggregator\").ensureHasValue().ensureIsObject();\n        this._eventAggregator = eventAggregator;\n        \n        this.executeOnCreate(() =>\n        {\n            const id = this.getBound<string>(\"id\");\n            if (id == null || typeof (id) !== \"string\" || id.isEmptyOrWhiteSpace())\n                throw new ArgumentException(\"id\", \"id not specified for file-select\");\n            \n            const sub = this._eventAggregator.subscribe(\"openFileSelect\", (identifier) =>\n            {\n                if (identifier !== id)\n                    return;\n                \n                this._inputElement.click();\n            });\n            \n            this.executeOnDestroy(() => sub.unsubscribe());\n        });\n    }\n    \n    \n    protected onMount(element: HTMLElement): void\n    {         \n        this.initializeMaxFileSizeBytes();\n\n        const inputText = this.isMultiple\n            ? this._inputTemplateMultiple.format(this.mimeTypesList) : this._inputTemplate.format(this.mimeTypesList);\n\n        const that = this;\n        const fchange = function ()\n        {\n            that.processFiles(this.files);\n            $(this).off(\"change\");\n            $(this).remove();\n            that._inputElement = $(inputText);\n            that._inputElement.change(fchange).appendTo($(element));\n        };\n\n        this._inputElement = $(inputText);\n        this._inputElement.change(fchange).appendTo($(element));\n    }\n\n\n    private processFiles(files: FileList): void\n    {\n        this._dialogService.showLoadingScreen();\n\n        const promises = new Array<Promise<FileInfo>>();\n\n        if (files == null || files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++)\n        {\n            const file = files[i];\n            const fileInfo = {} as FileInfo;\n            fileInfo.nativeFile = file;\n            fileInfo.fileName = file.name;\n            fileInfo.fileType = file.type;\n            fileInfo.fileSize = file.size;\n            \n            // if (fileInfo.fileType == null || fileInfo.fileType.isEmptyOrWhiteSpace())\n            // {\n            //     if (fileInfo.fileName.contains(\".\"))\n            //     {\n            //         const splitted = fileInfo.fileName.trim().split(\".\");\n            //         fileInfo.fileType = \".\" + splitted[splitted.length - 1].trim();\n            //     }\n            // }\n\n            const reader = new FileReader();\n            const promise = new Promise<FileInfo>((resolve, reject) =>\n            {\n                reader.onload = function (fi: FileInfo, res: any)\n                {\n                    return function (e: any)\n                    {\n                        fi.fileDataUrl = (<any>e).target.result;\n                        const splitted: string[] = (<any>e).target.result.split(\",\");\n                        fi.fileMime = splitted[0].trim().split(\";\")[0].substr(5);\n                        fi.fileData = splitted[1];\n                        res(fi);\n                    };\n                }(fileInfo, resolve);\n                \n                reader.onerror = function (rej: any)\n                {\n                    return function (e: any)\n                    {\n                        rej(e);\n                    };\n                }(reject);\n            });\n            \n            reader.readAsDataURL(file);\n\n            promises.push(promise);\n        }\n        \n        Promise.all(promises)\n            .then((results) =>\n            {\n                const processedFiles = new Array<FileInfo>();\n                const failedFiles = new Array<FileInfo>();\n\n                results.forEach(t =>\n                {\n                    if (this.ensureFileSizeIsAllowed(t))\n                        processedFiles.push(t);\n                    else\n                        failedFiles.push(t);\n                });\n\n                failedFiles.forEach(t => this._dialogService.showWarningMessage(\n                    \"File {0} exceeded the file size limit of {1} MB.\".format(t.fileName, this.maxFileSizeValue)));\n\n                if (processedFiles.length > 0)\n                {\n                    this.getBound<Function>(\"onSelection\")(this.isMultiple ? processedFiles : processedFiles[0]);\n                }\n                \n                this._dialogService.hideLoadingScreen();\n            })\n            .catch((e) =>\n            {\n                console.log(e);\n                this._dialogService.showErrorMessage(\"An error occurred while processing the files.\", \"ERROR\");\n                this._dialogService.hideLoadingScreen();\n            });\n    }\n\n    private ensureFileSizeIsAllowed(fileInfo: FileInfo): boolean\n    {\n        return this._maxFileSizeBytes != null ? fileInfo.fileSize <= this._maxFileSizeBytes : true;\n    }\n\n    private initializeMaxFileSizeBytes(): void\n    {\n        this._maxFileSizeBytes = this.maxFileSizeValue != null ? this.maxFileSizeValue * 1024 * 1024 : null;\n    }\n}"]}
{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/core/utils.ts"],"names":[],"mappings":";;AACA,qDAAiD;AACjD,iBAAe;AAEf;IAMI,IAAW,IAAI,KAAa,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAChD,IAAW,UAAU,KAAyB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAGxE,YAAmB,IAAY,EAAE,UAA8B;QAE3D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAClC,CAAC;CACJ;AAfD,oCAeC;AAGD;IAEW,MAAM,CAAC,gBAAgB,CAAC,GAAQ;QAEnC,IAAI,aAAa,GAAG,IAAI,KAAK,EAAgB,CAAC;QAC9C,IAAI,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QAC3C,EAAE,CAAC,CAAC,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,CAAC;YAC9C,MAAM,CAAC,aAAa,CAAC;QAEzB,IAAI,QAAQ,GAAG,CAAC,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAC7G,IAAI,aAAa,GAAG,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;QACpD,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,aAAa,CAAC,CAC/B,CAAC;YACG,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YACnB,EAAE,CAAC,CAAC,IAAI,KAAK,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;gBACpF,QAAQ,CAAC;YAEb,IAAI,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YAC5D,aAAa,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;QAC3D,CAAC;QAED,aAAa,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;QACzD,MAAM,CAAC,aAAa,CAAC;IACzB,CAAC;IAEM,MAAM,CAAC,eAAe,CAAC,KAAgB,EAAE,GAAQ;QAEpD,IAAI,UAAU,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;QAC9C,IAAI,WAAW,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC;QAC7C,IAAI,KAAK,GAA6B,EAAE,CAAC;QAEzC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,CAC/B,CAAC;YACG,IAAI,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YACpD,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAClB,CAAC;gBACG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,WAAW,CAAC,CAC5B,CAAC;oBACG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,KAAK,SAAS,CAAC,CAC3C,CAAC;wBACG,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;wBAC3C,KAAK,CAAC;oBACV,CAAC;gBACL,CAAC;gBAED,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,CAAC,CAC1C,CAAC;oBACG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC;wBAClB,MAAM,IAAI,8BAAa,CAAC,GAAG,CAAC,CAAC;oBAEjC,KAAK,GAAG,IAAI,CAAC;gBACjB,CAAC;YACL,CAAC;YACD,IAAI,CACJ,CAAC;gBACG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,CAC3B,CAAC;oBACG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,KAAK,SAAS,CAAC,CAC3C,CAAC;wBACG,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;wBAC1C,KAAK,CAAC;oBACV,CAAC;gBACL,CAAC;gBAED,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,CAAC;oBACtC,MAAM,IAAI,8BAAa,CAAC,GAAG,CAAC,CAAC;YACrC,CAAC;YAED,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;QAClC,CAAC;QAGD,+BAA+B;QAC/B,IAAI;QACJ,kDAAkD;QAClD,uBAAuB;QACvB,oBAAoB;QAEpB,4EAA4E;QAC5E,IAAI;QAEJ,uEAAuE;QACvE,IAAI;QACJ,kDAAkD;QAClD,uBAAuB;QACvB,wCAAwC;QAExC,2EAA2E;QAC3E,IAAI;QAEJ,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CACrD,CAAC;YACG,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAClC,6CAA6C;YAC7C,IAAI;YACJ,6BAA6B;YAC7B,wCAAwC;YAExC,oBAAoB;YACpB,IAAI;YACJ,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;CACJ;AA3GD,sBA2GC","sourcesContent":["import { RouteInfo } from \"./route-info\";\nimport { HttpException } from \"./http-exception\";\nimport \"n-ext\";\n\nexport class PropertyInfo\n{\n    private _name: string;\n    private _descriptor: PropertyDescriptor;\n\n\n    public get name(): string { return this._name; }\n    public get descriptor(): PropertyDescriptor { return this._descriptor; }\n\n\n    public constructor(name: string, descriptor: PropertyDescriptor)\n    {\n        this._name = name;\n        this._descriptor = descriptor;\n    }\n} \n\n\nexport class Utils\n{\n    public static getPropertyInfos(val: any): Array<PropertyInfo>\n    {\n        let propertyInfos = new Array<PropertyInfo>();\n        let prototype = Object.getPrototypeOf(val);\n        if (prototype === undefined || prototype === null)  // we are dealing with Object\n            return propertyInfos;\n            \n        let internal = [\"ctx\", \"onCreate\", \"onDestroy\", \"executeOnCreate\", \"executeOnDestroy\", \"onEnter\", \"onLeave\"];\n        let propertyNames = Object.getOwnPropertyNames(val);\n        for (let name of propertyNames)\n        {\n            name = name.trim();\n            if (name === \"constructor\" || name.indexOf(\"_\") === 0 || internal.some(t => t === name))\n                continue;\n\n            let descriptor = Object.getOwnPropertyDescriptor(val, name);\n            propertyInfos.push(new PropertyInfo(name, descriptor));\n        }\n\n        propertyInfos.push(...Utils.getPropertyInfos(prototype));\n        return propertyInfos;\n    }\n    \n    public static createRouteArgs(route: RouteInfo, ctx: any): Array<any>\n    {\n        let pathParams = ctx.params ? ctx.params : {};\n        let queryParams = ctx.query ? ctx.query : {};\n        let model: { [index: string]: any } = {};\n\n        for (let param of route.params)\n        {\n            let lookupKey = param.paramKey.trim().toLowerCase();\n            let value = null;\n            if (param.isQuery)\n            {\n                for (let key in queryParams)\n                {\n                    if (key.trim().toLowerCase() === lookupKey)\n                    {\n                        value = param.parseParam(queryParams[key]);\n                        break;\n                    }    \n                }\n                \n                if (value === undefined || value === null)\n                {\n                    if (!param.isOptional)\n                        throw new HttpException(404);\n                    \n                    value = null;\n                }    \n            }\n            else\n            {\n                for (let key in pathParams)\n                {\n                    if (key.trim().toLowerCase() === lookupKey)\n                    {\n                        value = param.parseParam(pathParams[key]);\n                        break;\n                    }\n                }\n\n                if (value === undefined || value === null)\n                    throw new HttpException(404);\n            }\n            \n            model[param.paramKey] = value;\n        }    \n\n        \n        // for (let key in queryParams)\n        // {\n        //     let routeParam = route.findRouteParam(key);\n        //     if (!routeParam)\n        //         continue;\n\n        //     model[routeParam.paramKey] = routeParam.parseParam(queryParams[key]);\n        // }\n\n        // for (let key in pathParams) // this wont work in multi level nesting\n        // {\n        //     let routeParam = route.findRouteParam(key);\n        //     if (!routeParam)\n        //         throw new HttpException(404);\n\n        //     model[routeParam.paramKey] = routeParam.parseParam(pathParams[key]);\n        // }\n\n        let result = [];\n        for (let param of route.params.orderBy(t => t.order))\n        {\n            let value = model[param.paramKey];\n            // if (value === undefined || value === null)\n            // {\n            //     if (!param.isOptional)\n            //         throw new HttpException(404);\n\n            //     value = null;\n            // }\n            result.push(value);\n        }\n\n        return result;\n    }\n}\n\n\n\n\n\n\n"]}
{"version":3,"file":"page-registration.js","sourceRoot":"","sources":["../../src/core/page-registration.ts"],"names":[],"mappings":";;AAAA,0DAAiD;AACjD,uEAAkE;AAClE,mCAAyC;AACzC,0DAAgE;AAChE,6CAAyC;AACzC,mCAAsC;AAGtC,sBAA8B,SAAQ,+CAAqB;IAOvD,IAAW,KAAK,KAAgB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACrD,IAAW,QAAQ,KAAa,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACxD,IAAW,KAAK,KAAa,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAGlD,YAAmB,IAAc,EAAE,gBAAwB;QAEvD,mBAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC,gBAAgB,EAAE,CAAC;QACxD,mBAAK,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC,cAAc,EAAE,CAAC;QAE7D,KAAK,CAAC,IAAI,CAAC,CAAC;QAEZ,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,sBAAc,EAAE,IAAI,CAAC,SAAS,CAAC;YACvD,MAAM,IAAI,kCAAoB,CAAC,kBAAkB,IAAI,CAAC,IAAI,iCAAiC,CAAC,CAAC;QAEjG,MAAM,SAAS,GAAG,OAAO,CAAC,cAAc,CAAC,sBAAc,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAEzE,IAAI,CAAC,MAAM,GAAG,IAAI,sBAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC;QAEpC,IAAI,KAAK,GAAG,gBAAgB,IAAI,IAAI,CAAC;QACrC,IAAI,OAAO,CAAC,cAAc,CAAC,mBAAW,EAAE,IAAI,CAAC,SAAS,CAAC;YACnD,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,mBAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAEhE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;CACJ;AAjCD,4CAiCC","sourcesContent":["import { given } from \"@nivinjoseph/n-defensive\";\nimport { ViewModelRegistration } from \"./view-model-registration\";\nimport { appRouteSymbol } from \"./route\";\nimport { ApplicationException } from \"@nivinjoseph/n-exception\";\nimport { RouteInfo } from \"./route-info\"; \nimport { titleSymbol } from \"./title\";\n\n\nexport class PageRegistration extends ViewModelRegistration\n{\n    private readonly _route: RouteInfo;\n    private readonly _redirect: string;\n    private readonly _title: string;\n    \n    \n    public get route(): RouteInfo { return this._route; }\n    public get redirect(): string { return this._redirect; }\n    public get title(): string { return this._title; }\n    \n    \n    public constructor(page: Function, defaultPageTitle: string)\n    {\n        given(page, \"page\").ensureHasValue().ensureIsFunction();\n        given(defaultPageTitle, \"defaultPageTitle\").ensureIsString();\n        \n        super(page);\n\n        if (!Reflect.hasOwnMetadata(appRouteSymbol, this.viewModel))\n            throw new ApplicationException(`PageViewModel '${this.name}' does not have @route applied.`);\n\n        const routeData = Reflect.getOwnMetadata(appRouteSymbol, this.viewModel);\n        \n        this._route = new RouteInfo(routeData.route);\n        this._redirect = routeData.redirect;\n        \n        let title = defaultPageTitle || null;\n        if (Reflect.hasOwnMetadata(titleSymbol, this.viewModel))\n            title = Reflect.getOwnMetadata(titleSymbol, this.viewModel);\n        \n        this._title = title;\n    }\n}"]}
{"version":3,"file":"page-registration.js","sourceRoot":"","sources":["../../src/core/page-registration.ts"],"names":[],"mappings":";;AAAA,0DAAiD;AACjD,uEAAkE;AAClE,mCAAyC;AACzC,0DAAgE;AAChE,6CAAyC;AACzC,mCAAsC;AACtC,iCAAoC;AAEpC,uCAA0C;AAG1C,MAAa,gBAAiB,SAAQ,+CAAqB;IAavD,IAAW,KAAK,KAAgB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACrD,IAAW,QAAQ,KAAa,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACxD,IAAW,KAAK,KAAa,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAClD,IAAW,QAAQ,KAAa,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACxD,IAAW,SAAS,KAAyB,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAEtE,IAAW,cAAc,KAAyB,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;IAChF,IAAW,cAAc,CAAC,KAAyB,IAAI,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC,CAAC;IAQtF,YAAmB,IAAc,EAAE,gBAAwB,EAAE,gBAA2D;QAEpH,mBAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC,gBAAgB,EAAE,CAAC;QACxD,mBAAK,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC,cAAc,EAAE,CAAC;QAC7D,mBAAK,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC,aAAa,EAAE,CAAC;QAE5D,KAAK,CAAC,IAAI,CAAC,CAAC;QAEZ,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,sBAAc,EAAE,IAAI,CAAC,SAAS,CAAC;YACvD,MAAM,IAAI,kCAAoB,CAAC,kBAAkB,IAAI,CAAC,IAAI,iCAAiC,CAAC,CAAC;QAEjG,MAAM,SAAS,GAAG,OAAO,CAAC,cAAc,CAAC,sBAAc,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAEzE,IAAI,CAAC,MAAM,GAAG,IAAI,sBAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC;QAEpC,IAAI,KAAK,GAAG,gBAAgB,IAAI,IAAI,CAAC;QACrC,IAAI,OAAO,CAAC,cAAc,CAAC,mBAAW,EAAE,IAAI,CAAC,SAAS,CAAC;YACnD,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,mBAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAEhE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,MAAM,KAAK,GAAG,gBAAgB,IAAI,EAAE,CAAC;QACrC,IAAI,OAAO,CAAC,cAAc,CAAC,iBAAU,EAAE,IAAI,CAAC,SAAS,CAAC;YAClD,KAAK,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,cAAc,CAAC,iBAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAEtE,IAAI,CAAC,SAAS,GAAG,KAAK;aACjB,MAAM,CAAC,CAAC,GAAQ,EAAE,CAAC,EAAE,EAAE;YAEpB,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;YACxB,OAAO,GAAG,CAAC;QACf,CAAC,EAAE,EAAE,CAAC,CAAC;QAyBX,IAAI,OAAO,CAAC,cAAc,CAAC,uBAAa,EAAE,IAAI,CAAC,SAAS,CAAC;YACrD,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC,uBAAa,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAChF,CAAC;CACJ;AAvFD,4CAuFC","sourcesContent":["import { given } from \"@nivinjoseph/n-defensive\";\nimport { ViewModelRegistration } from \"./view-model-registration\";\nimport { appRouteSymbol } from \"./route\";\nimport { ApplicationException } from \"@nivinjoseph/n-exception\";\nimport { RouteInfo } from \"./route-info\";\nimport { titleSymbol } from \"./title\";\nimport { metaSymbol } from \"./meta\";\n// import { authorizeSymbol } from \"./authorize\";\nimport { resolveSymbol } from \"./resolve\";\n\n\nexport class PageRegistration extends ViewModelRegistration\n{\n    private readonly _route: RouteInfo;\n    private readonly _redirect: string;\n    private readonly _title: string;\n    private readonly _metadata: object;\n    private readonly _resolvers: ReadonlyArray<any>;\n    private _resolvedValues: ReadonlyArray<any>;\n    // private readonly _hasAuthorize: boolean;\n    // private readonly _useDefaultAuthorizer: boolean;\n    // private readonly _authorizers: ReadonlyArray<string>;\n\n\n    public get route(): RouteInfo { return this._route; }\n    public get redirect(): string { return this._redirect; }\n    public get title(): string { return this._title; }\n    public get metadata(): object { return this._metadata; }\n    public get resolvers(): ReadonlyArray<any> { return this._resolvers; }\n    \n    public get resolvedValues(): ReadonlyArray<any> { return this._resolvedValues; }\n    public set resolvedValues(value: ReadonlyArray<any>) { this._resolvedValues = value; }\n    \n    // public get hasAuthorize(): boolean { return this._hasAuthorize; }\n    \n    // public get useDefaultAuthorizer(): boolean { return this._useDefaultAuthorizer; }\n    // public get authorizers(): ReadonlyArray<string> { return this._authorizers; }\n    \n\n    public constructor(page: Function, defaultPageTitle: string, defaultPageMetas: Array<{ name: string; content: string; }>)\n    {\n        given(page, \"page\").ensureHasValue().ensureIsFunction();\n        given(defaultPageTitle, \"defaultPageTitle\").ensureIsString();\n        given(defaultPageMetas, \"defaultPageMetas\").ensureIsArray();\n\n        super(page);\n\n        if (!Reflect.hasOwnMetadata(appRouteSymbol, this.viewModel))\n            throw new ApplicationException(`PageViewModel '${this.name}' does not have @route applied.`);\n\n        const routeData = Reflect.getOwnMetadata(appRouteSymbol, this.viewModel);\n\n        this._route = new RouteInfo(routeData.route);\n        this._redirect = routeData.redirect;\n\n        let title = defaultPageTitle || null;\n        if (Reflect.hasOwnMetadata(titleSymbol, this.viewModel))\n            title = Reflect.getOwnMetadata(titleSymbol, this.viewModel);\n\n        this._title = title;\n\n        const metas = defaultPageMetas || [];\n        if (Reflect.hasOwnMetadata(metaSymbol, this.viewModel))\n            metas.push(...Reflect.getOwnMetadata(metaSymbol, this.viewModel));\n\n        this._metadata = metas\n            .reduce((acc: any, t) =>\n            {\n                acc[t.name] = t.content;\n                return acc;\n            }, {});\n        \n        // if (Reflect.hasOwnMetadata(authorizeSymbol, this.viewModel))\n        // {\n        //     this._hasAuthorize = true;\n        //     const authorizers: Array<string> = Reflect.getOwnMetadata(authorizeSymbol, this.viewModel);\n        //     if (authorizers.length > 0)\n        //     {\n        //         this._useDefaultAuthorizer = false;\n        //         this._authorizers = authorizers;\n        //     }\n        //     else\n        //     {\n        //         this._useDefaultAuthorizer = true;\n        //         this._authorizers = null;\n        //     }\n        // }\n        // else\n        // {\n        //     this._hasAuthorize = false;\n        //     this._useDefaultAuthorizer = false;\n        //     this._authorizers = null;\n        // }\n        \n        \n        if (Reflect.hasOwnMetadata(resolveSymbol, this.viewModel))\n            this._resolvers = Reflect.getOwnMetadata(resolveSymbol, this.viewModel);\n    }\n}"]}
{"version":3,"file":"page-component-factory.js","sourceRoot":"","sources":["../../src/core/page-component-factory.ts"],"names":[],"mappings":"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","sourcesContent":["import { ComponentFactory } from \"./component-factory\";\nimport { PageRegistration } from \"./page-registration\";\nimport { RouteArgs } from \"./route-args\";\nimport { Container, Scope } from \"@nivinjoseph/n-ject\";\nimport { given } from \"@nivinjoseph/n-defensive\";\nimport { Utilities } from \"./utilities\";\nimport { ApplicationException } from \"@nivinjoseph/n-exception\";\n\n\nexport class PageComponentFactory\n{\n    public create(registration: PageRegistration): Object\n    {\n        given(registration, \"registration\").ensureHasValue();\n\n        const component: any = {};\n       \n        component.template = registration.template;\n\n        component.inject = [\"rootScopeContainer\"];\n        \n        component.data = function ()\n        {\n            let vueVm = this;\n            \n            let container: Scope = vueVm.rootScopeContainer;\n            if (!container)\n                throw new ApplicationException(\"Could not get rootScopeContainer.\");\n            container = container.createScope(); // page scope\n            let vm = container.resolve<any>(registration.name);\n            \n            let data = {\n                vm: vm,\n                pageScopeContainer: container\n            };\n            let methods: { [index: string]: any } = {};\n            let computed: { [index: string]: any } = {};\n\n            let propertyInfos = Utilities.getPropertyInfos(vm);\n            for (let info of propertyInfos)\n            {\n                if (typeof (info.descriptor.value) === \"function\")\n                    methods[info.name] = info.descriptor.value.bind(vm);\n                else if (info.descriptor.get || info.descriptor.set)\n                {\n                    computed[info.name] = {\n                        get: info.descriptor.get ? info.descriptor.get.bind(vm) : undefined,\n                        set: info.descriptor.set ? info.descriptor.set.bind(vm) : undefined\n                    };\n                }\n            }\n\n            vueVm.$options.methods = methods;\n            vueVm.$options.computed = computed;\n            vm._ctx = vueVm;\n            \n            return data;\n        };\n        \n        component.provide = function ()\n        {\n            return {\n                pageScopeContainer: this.pageScopeContainer\n            };\n        };\n\n        component.beforeCreate = function ()\n        {\n            // console.log(\"executing beforeCreate\");\n            // console.log(this.vm);\n        };\n\n        component.created = function ()\n        {\n            // console.log(\"executing created\");\n            // console.log(this.vm);\n\n            if (this.vm.onCreate)\n                this.vm.onCreate();\n        };\n\n        component.beforeMount = function ()\n        {\n            // console.log(\"executing beforeMount\");\n            // console.log(this.vm);\n        };\n\n        component.mounted = function ()\n        {\n            // console.log(\"executing mounted\");\n            // console.log(this.vm);\n\n            if (this.vm.onMount)\n                this.vm.onMount(this.$el);\n        };\n\n        component.beforeUpdate = function ()\n        {\n            // console.log(\"executing beforeUpdate\");\n            // console.log(this.vm);\n        };\n\n        component.updated = function ()\n        {\n            // console.log(\"executing updated\");\n            // console.log(this.vm);\n        };\n\n        component.beforeDestroy = function ()\n        {\n            // console.log(\"executing beforeDestroy\");\n            // console.log(this.vm);\n        };\n\n        component.destroyed = function ()\n        {\n            // console.log(\"executing destroyed\");\n            // console.log(this.vm);\n\n            if (this.vm.onDestroy)\n                this.vm.onDestroy();\n        };\n        \n        \n        \n        \n        \n        \n        /* The Full Navigation Resolution Flow\n                Navigation triggered\n                Call leave guards in deactivated components\n                Call global beforeEach guards\n                Call beforeRouteUpdate guards in reused components (2.2+)\n                Call beforeEnter in route configs\n                Resolve async route components\n                Call beforeRouteEnter in activated components\n                Call global beforeResolve guards (2.5+)\n                Navigation confirmed.\n                Call global afterEach hooks.\n                DOM updates triggered.\n                Call callbacks passed to next in beforeRouteEnter guards with instantiated instances.\n         */\n        \n        component.beforeRouteEnter = function (to: any, from: any, next: any)\n        {\n            // called before the route that renders this component is confirmed.\n            // does NOT have access to `this` component instance,\n            // because it has not been created yet when this guard is called!\n            \n            console.log(\"Calling beforeRouteEnter\", to);\n            \n            \n            let routeArgs: RouteArgs = null;\n            \n            try \n            {\n                routeArgs = RouteArgs.create(registration.route, to);\n            }\n            catch (error)\n            {\n                console.log(error);\n                next(false);\n                return;\n            }\n            \n            if (registration.title)\n                window.document.title = registration.title;\n            next((vueModel: any) =>\n            {\n                if (registration.title)\n                    window.document.title = registration.title;\n                let vm = vueModel.vm;\n                vm.__routeArgs = routeArgs;\n                if (vm.onEnter)\n                    routeArgs.routeArgs.length > 0 ? vm.onEnter(...routeArgs.routeArgs) : vm.onEnter();\n            });\n        };\n        \n        component.beforeRouteUpdate = function (to: any, from: any, next: any)\n        {\n            // called when the route that renders this component has changed,\n            // but this component is reused in the new route.\n            // For example, for a route with dynamic params /foo/:id, when we\n            // navigate between /foo/1 and /foo/2, the same Foo component instance\n            // will be reused, and this hook will be called when that happens.\n            // has access to `this` component instance.\n  \n            console.log(\"Calling beforeRouteUpdate\");\n            \n            let routeArgs: RouteArgs = null;\n            try \n            {\n                routeArgs = RouteArgs.create(registration.route, to);\n            }\n            catch (error)\n            {\n                console.log(error);\n                next(false);\n                return;\n            }\n            \n            let fromRouteArgs: RouteArgs = null;\n            try \n            {\n                fromRouteArgs = RouteArgs.create(registration.route, from);\n            }\n            catch (error) \n            {\n                console.log(error);\n                fromRouteArgs = new RouteArgs({}, {}, []);\n            }\n\n            if (routeArgs.equals(fromRouteArgs))\n            {\n                if (registration.title)\n                    window.document.title = registration.title;\n                next();\n                return;\n            }   \n            \n            let vm = this.vm;\n            if (vm.onLeave)\n                vm.onLeave();    \n            \n            vm.__routeArgs = routeArgs;\n            if (vm.onEnter)\n                routeArgs.routeArgs.length > 0 ? vm.onEnter(...routeArgs.routeArgs) : vm.onEnter();\n            \n            if (registration.title)\n                window.document.title = registration.title;\n            next();\n        };\n        \n        component.beforeRouteLeave = function (to: any, from: any, next: any)\n        {\n            // called when the route that renders this component is about to\n            // be navigated away from.\n            // has access to `this` component instance.\n\n            let vm = this.vm;\n            if (vm.onLeave)\n                vm.onLeave();\n            \n            next();\n        };\n        \n        return component;\n    }\n}"]}
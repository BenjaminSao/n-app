{"version":3,"file":"page-component-factory.js","sourceRoot":"","sources":["../../src/core/page-component-factory.ts"],"names":[],"mappings":"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","sourcesContent":["import { ComponentFactory } from \"./component-factory\";\nimport { PageRegistration } from \"./page-registration\";\nimport { RouteArgs } from \"./route-args\";\n\n\nexport class PageComponentFactory extends ComponentFactory\n{\n    public create(registration: PageRegistration): Object\n    {\n        let component: any = super.create(registration);\n        \n        /* The Full Navigation Resolution Flow\n                Navigation triggered\n                Call leave guards in deactivated components\n                Call global beforeEach guards\n                Call beforeRouteUpdate guards in reused components (2.2+)\n                Call beforeEnter in route configs\n                Resolve async route components\n                Call beforeRouteEnter in activated components\n                Call global beforeResolve guards (2.5+)\n                Navigation confirmed.\n                Call global afterEach hooks.\n                DOM updates triggered.\n                Call callbacks passed to next in beforeRouteEnter guards with instantiated instances.\n         */\n        \n        component.beforeRouteEnter = function (to: any, from: any, next: any)\n        {\n            // called before the route that renders this component is confirmed.\n            // does NOT have access to `this` component instance,\n            // because it has not been created yet when this guard is called!\n            \n            let routeArgs: RouteArgs = null;\n            \n            try \n            {\n                routeArgs = RouteArgs.create(registration.route, to);\n            }\n            catch (error)\n            {\n                console.log(error);\n                next(false);\n                return;\n            }\n            \n            next((vueModel: any) =>\n            {\n                let vm = vueModel.vm;\n                vm.__routeArgs = routeArgs;\n                if (vm.onEnter)\n                    routeArgs.routeArgs.length > 0 ? vm.onEnter(...routeArgs.routeArgs) : vm.onEnter();\n            });\n        };\n        \n        component.beforeRouteUpdate = function (to: any, from: any, next: any)\n        {\n            // called when the route that renders this component has changed,\n            // but this component is reused in the new route.\n            // For example, for a route with dynamic params /foo/:id, when we\n            // navigate between /foo/1 and /foo/2, the same Foo component instance\n            // will be reused, and this hook will be called when that happens.\n            // has access to `this` component instance.\n  \n            \n            let routeArgs: RouteArgs = null;\n            try \n            {\n                routeArgs = RouteArgs.create(registration.route, to);\n            }\n            catch (error)\n            {\n                console.log(error);\n                next(false);\n                return;\n            }\n            \n            let fromRouteArgs: RouteArgs = null;\n            try \n            {\n                fromRouteArgs = RouteArgs.create(registration.route, from);\n            }\n            catch (error) \n            {\n                console.log(error);\n                fromRouteArgs = new RouteArgs({}, {}, []);\n            }\n\n            if (routeArgs.equals(fromRouteArgs))\n            {\n                next();\n                return;\n            }   \n            \n            let vm = this.vm;\n            if (vm.onLeave)\n                vm.onLeave();    \n            \n            vm.__routeArgs = routeArgs;\n            if (vm.onEnter)\n                routeArgs.routeArgs.length > 0 ? vm.onEnter(...routeArgs.routeArgs) : vm.onEnter();\n            \n            next();\n        };\n        \n        component.beforeRouteLeave = function (to: any, from: any, next: any)\n        {\n            // called when the route that renders this component is about to\n            // be navigated away from.\n            // has access to `this` component instance.\n\n            let vm = this.vm;\n            if (vm.onLeave)\n                vm.onLeave();\n            \n            next();\n        };\n        \n        return component;\n    }\n}"]}
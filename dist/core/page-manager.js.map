{"version":3,"file":"page-manager.js","sourceRoot":"","sources":["../../src/core/page-manager.ts"],"names":[],"mappings":"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","sourcesContent":["import { given } from \"n-defensive\";\nimport { Container } from \"n-ject\";\nimport { PageRegistration } from \"./page-registration\";\nimport { ApplicationException } from \"n-exception\";\nimport { Page } from \"./page\";\nimport { PageTreeBuilder } from \"./page-tree-builder\";\n\n\nexport class PageManager\n{\n    private readonly _vueRouter: any;\n    private readonly _container: Container;\n    private readonly _registrations = new Array<PageRegistration>();\n    private _vueRouterInstance: any;\n    private _unknownRoute: string;\n    private _useHistoryMode: boolean = false;\n    \n    \n    public get useHistoryMode(): boolean { return this._useHistoryMode; }\n    public get vueRouterInstance(): any { return this._vueRouterInstance; }\n    \n    \n    public constructor(vueRouter: any, container: Container)\n    {\n        given(vueRouter, \"vueRouter\").ensureHasValue();\n        given(container, \"container\").ensureHasValue();\n        this._vueRouter = vueRouter;\n        this._container = container;\n    }\n    \n    \n    public registerPages(...pageViewModelClasses: Function[]): void\n    {\n        for (let item of pageViewModelClasses)\n            this.registerPage(item);    \n    }\n    \n    public useAsUnknownRoute(route: string): void\n    {\n        given(route, \"route\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n        this._unknownRoute = route.trim();\n    }\n    \n    public useHistoryModeRouting(): void\n    {\n        this._useHistoryMode = true;\n    }\n    \n    public bootstrap(): void\n    {\n        if (this._registrations.length === 0)\n            return;\n        \n        let pageTree = this.createPageTree();\n        let vueRouterRoutes = pageTree.map(t => t.createVueRouterRoute(this._container));  \n        if (this._unknownRoute)\n            vueRouterRoutes.push({ path: \"*\", redirect: this._unknownRoute });    \n        let vueRouter = this._vueRouter;\n        const routerOptions: any = {\n            routes: vueRouterRoutes,\n            scrollBehavior: function (to: any, from: any, savedPosition: any)\n            {\n                return { x: 0, y: 0 };\n            }\n        };\n        if (this._useHistoryMode)\n            routerOptions.mode = \"history\";    \n        this._vueRouterInstance = new vueRouter(routerOptions);\n    }\n    \n    \n    private registerPage(pageViewModelClass: Function): void\n    {\n        let registration = new PageRegistration(pageViewModelClass);\n\n        if (this._registrations.some(t => t.name === registration.name))\n            throw new ApplicationException(`Duplicate Page registration with name '${registration.name}'.`);\n\n        if (this._registrations.some(t => t.route.routeKey === registration.route.routeKey))\n            throw new ApplicationException(`Route conflict detected for Page registration with name '${registration.name}'`);\n\n        this._registrations.push(registration);\n        this._container.registerTransient(registration.name, registration.viewModel);\n    }\n    \n    private createPageTree(): ReadonlyArray<Page>\n    {\n        let root = new Page(\"/\", null);\n        let treeBuilder = new PageTreeBuilder(root, this._registrations);\n        return treeBuilder.build();\n    }\n}\n\n"]}
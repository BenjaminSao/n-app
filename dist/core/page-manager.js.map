{"version":3,"file":"page-manager.js","sourceRoot":"","sources":["../../src/core/page-manager.ts"],"names":[],"mappings":"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","sourcesContent":["import { given } from \"@nivinjoseph/n-defensive\";\nimport { Container } from \"@nivinjoseph/n-ject\";\nimport { PageRegistration } from \"./page-registration\";\nimport { ApplicationException } from \"@nivinjoseph/n-exception\";\nimport { Page } from \"./page\";\nimport { PageTreeBuilder } from \"./page-tree-builder\";\nimport { Authorizer } from \"./authorizer\";\n\n\nexport class PageManager\n{\n    private readonly _vueRouter: any;\n    private readonly _container: Container;\n    private readonly _pageViewModelClasses = new Array<Function>();\n    private readonly _authorizerClasses = new Array<Function>();\n    private readonly _authorizers = new Array<string>();\n    private readonly _registrations = new Array<PageRegistration>();\n    private _vueRouterInstance: any = null;\n    private _initialRoute: string = null;\n    private _unknownRoute: string = null;\n    private _defaultPageTitle: string = null;\n    private _defaultPageMetas: Array<{ name: string; content: string; }> = null;\n    private _useHistoryMode: boolean = false;\n    private _defaultAuthorizerClass: Function = null;\n    private _defaultAuthorizer: string = null;\n    private _authorizeFailRoute: string = null;\n    \n    \n    public get useHistoryMode(): boolean { return this._useHistoryMode; }\n    public get vueRouterInstance(): any { return this._vueRouterInstance; }\n    \n    \n    public constructor(vueRouter: any, container: Container)\n    {\n        given(vueRouter, \"vueRouter\").ensureHasValue();\n        given(container, \"container\").ensureHasValue();\n        this._vueRouter = vueRouter;\n        this._container = container;\n    }\n    \n    \n    public registerPages(...pageViewModelClasses: Function[]): void\n    {\n        this._pageViewModelClasses.push(...pageViewModelClasses);\n    }\n    \n    public registerAuthorizers(...authorizerClasses: Function[]): void\n    {\n        this._authorizerClasses.push(...authorizerClasses);\n    }\n    \n    public useAsDefaultAuthorizer(authorizerClass: Function): void\n    {\n        given(authorizerClass, \"authorizerClass\").ensureHasValue().ensureIsFunction();\n        this._defaultAuthorizerClass = authorizerClass;\n    }\n    \n    public useAsAuthorizeFailRoute(route: string): void\n    {\n        given(route, \"route\").ensureHasValue().ensureIsString();\n        this._authorizeFailRoute = route.trim();\n    }\n    \n    public useAsInitialRoute(route: string): void\n    {\n        given(route, \"route\").ensureHasValue().ensureIsString();\n        this._initialRoute = route.trim();\n    }\n    \n    public useAsUnknownRoute(route: string): void\n    {\n        given(route, \"route\").ensureHasValue().ensureIsString();\n        this._unknownRoute = route.trim();\n    }\n    \n    public useAsDefaultPageTitle(title: string): void\n    {\n        given(title, \"title\").ensureHasValue().ensureIsString();\n        this._defaultPageTitle = title.trim();\n    }\n    \n    public useAsDefaultPageMetadata(metas: ReadonlyArray<{ name: string; content: string; }>): void\n    {\n        given(metas, \"metas\").ensureHasValue().ensureIsArray().ensure(t => t.length > 0);\n        this._defaultPageMetas = [...metas];\n    }\n    \n    public useHistoryModeRouting(): void\n    {\n        this._useHistoryMode = true;\n    }\n    \n    public bootstrap(): void\n    {\n        if (this._defaultAuthorizerClass)\n        {\n            this.registerAuthorizer(this._defaultAuthorizerClass);\n            this._defaultAuthorizer = (\" \" + (<Object>this._defaultAuthorizerClass).getTypeName().trim()).substr(1); // Shrey: Safari de-optimization\n        }\n        this._authorizerClasses.forEach(t => this.registerAuthorizer(t));\n        \n        this._pageViewModelClasses.forEach(t => this.registerPage(t));  \n        if (this._registrations.length === 0)\n            return;\n        \n        this.createRouting();\n        this.configureAuthorization();\n    }\n    \n    \n    private registerAuthorizer(authorizerClass: Function): void\n    {\n        const name = (\" \" + (<Object>authorizerClass).getTypeName().trim()).substr(1); // Shrey: Safari de-optimization\n        if (this._authorizers.some(t => t === name))\n            throw new ApplicationException(`Duplicate Authorizer registration with name '${name}'.`);\n        \n        this._container.registerTransient(name, authorizerClass);\n        this._authorizers.push(name);\n    }\n    \n    private registerPage(pageViewModelClass: Function): void\n    {\n        let registration = new PageRegistration(pageViewModelClass, this._defaultPageTitle, this._defaultPageMetas);\n\n        if (this._registrations.some(t => t.name === registration.name))\n            throw new ApplicationException(`Duplicate Page registration with name '${registration.name}'.`);\n\n        if (this._registrations.some(t => t.route.routeKey === registration.route.routeKey))\n            throw new ApplicationException(`Route conflict detected for Page registration with name '${registration.name}'`);\n\n        if (registration.hasAuthorize)\n        {\n            if (registration.useDefaultAuthorizer)\n            {\n                if (!this._defaultAuthorizerClass)\n                    throw new ApplicationException(`Page registration with name '${registration.name}' wants to use default Authorizer but no default Authorizer is configured for use.`);\n            }\n            else\n            {\n                registration.authorizers.forEach(t =>\n                {\n                    if (this._authorizers.some(u => u === t))\n                        return;\n                    \n                    throw new ApplicationException(`Page registration with name '${registration.name}' wants to use Authorizer with name '${t}' but no such Authorizer is registered.`);\n                });\n            }\n        }\n        \n        this._registrations.push(registration);\n        this._container.registerTransient(registration.name, registration.viewModel);\n    }\n    \n    private createRouting(): void\n    {\n        let pageTree = this.createPageTree();\n        let vueRouterRoutes = pageTree.map(t => t.createVueRouterRoute());\n        if (this._initialRoute)\n            vueRouterRoutes.push({ path: \"/\", redirect: this._initialRoute });\n        if (this._unknownRoute)\n            vueRouterRoutes.push({ path: \"*\", redirect: this._unknownRoute });\n        let vueRouter = this._vueRouter;\n        const routerOptions: any = {\n            routes: vueRouterRoutes,\n            // @ts-ignore\n            scrollBehavior: function (to: any, from: any, savedPosition: any)\n            {\n                return { x: 0, y: 0 };\n            }\n        };\n        if (this._useHistoryMode)\n            routerOptions.mode = \"history\";\n        this._vueRouterInstance = new vueRouter(routerOptions);\n    }\n    \n    \n    private createPageTree(): ReadonlyArray<Page>\n    {\n        let root = new Page(\"/\", null);\n        let treeBuilder = new PageTreeBuilder(root, this._registrations);\n        return treeBuilder.build();\n    }\n    \n    private configureAuthorization(): void\n    {\n        // @ts-ignore\n        this._vueRouterInstance.beforeEach((to: any, from: any, next: any) =>\n        {\n            const registrationName = to.name + \"ViewModel\";\n            const registration = this._registrations.find(t => t.name === registrationName);\n            if (registration.hasAuthorize)\n            {\n                const authorizers = registration.useDefaultAuthorizer\n                    ? [this._container.resolve<Authorizer>(this._defaultAuthorizer)]\n                    : registration.authorizers.map(t => this._container.resolve<Authorizer>(t));\n\n                authorizers.forEach(t =>\n                {\n                    let passed = true;\n\n                    try \n                    {\n                        passed = t.authorize();\n                    }\n                    catch (error)\n                    {\n                        console.error(`${(<Object>t).getTypeName()} Error =>`, error);\n                        passed = false;\n                    }\n\n                    if (!passed)\n                    {\n                        next(this._authorizeFailRoute || false);\n                        return;\n                    }\n                });\n            }\n\n            next();\n        });\n    }\n    \n    // private configureInitialRoute(): void\n    // {\n    //     if (!this._initialRoute || this._initialRoute.isEmptyOrWhiteSpace())\n    //         return;\n\n    //     if (this._useHistoryMode)\n    //     {\n    //         if (!window.location.pathname || window.location.pathname.toString().isEmptyOrWhiteSpace() ||\n    //             window.location.pathname.toString().trim() === \"/\" || window.location.pathname.toString().trim() === \"null\")\n    //             this._vueRouterInstance.replace(this._initialRoute);\n            \n    //         return;\n    //     }\n\n    //     if (!window.location.hash)\n    //     {\n    //         if (this._initialRoute)\n    //             window.location.hash = \"#\" + this._initialRoute;\n    //     }\n    //     else\n    //     {\n    //         let hashVal = window.location.hash.trim();\n    //         if (hashVal.length === 1)\n    //         {\n    //             if (this._initialRoute)\n    //                 window.location.hash = \"#\" + this._initialRoute;\n    //         }\n    //         else\n    //         {\n    //             hashVal = hashVal.substr(1);\n    //             if (hashVal === \"/\")\n    //             {\n    //                 if (this._initialRoute)\n    //                     window.location.hash = \"#\" + this._initialRoute;\n    //             }\n    //         }\n    //     }\n    // }\n}\n\n"]}
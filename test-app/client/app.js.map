{"version":3,"file":"app.js","sourceRoot":"","sources":["app.ts"],"names":[],"mappings":";;AAAA,6CAA8C;AAC9C,4FAAsF;AAEtF,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC,CAAC;AAG9D,MAAM,GAAG,GAAG,IAAI,iBAAS,CAAC,MAAM,CAAC;KAC5B,kBAAkB,CAAC,4CAAmB,CAAC,CAAC;AAE7C,GAAG,CAAC,SAAS,EAAE,CAAC;AAYhB,yBAAyB;AACzB,8CAA8C;AAE9C,wBAAwB;AACxB,mCAAmC;AAGnC,qBAAqB;AACrB,IAAI;AACJ,6BAA6B;AAC7B,+CAA+C;AAG/C,uDAAuD;AACvD,+EAA+E;AAG/E,uEAAuE;AACvE,QAAQ;AACR,6BAA6B;AAC7B,yCAAyC;AACzC,QAAQ;AACR,QAAQ;AAGR,qDAAqD;AACrD,IAAI;AACJ,+CAA+C;AAC/C,kDAAkD;AAClD,wFAAwF;AACxF,gCAAgC;AAEhC,8DAA8D;AAC9D,0DAA0D;AAC1D,4BAA4B;AAC5B,IAAI;AAEJ,oCAAoC;AACpC,IAAI;AACJ,gDAAgD;AAChD,sCAAsC;AACtC,QAAQ;AACR,iEAAiE;AACjE,wBAAwB;AAExB,gCAAgC;AAChC,6CAA6C;AAC7C,wBAAwB;AAExB,iDAAiD;AACjD,QAAQ;AACR,IAAI;AAEJ,2DAA2D;AAC3D,IAAI;AACJ,qDAAqD;AACrD,kDAAkD;AAClD,wFAAwF;AACxF,gCAAgC;AAEhC,2DAA2D;AAC3D,sCAAsC;AACtC,QAAQ;AACR,iEAAiE;AACjE,wBAAwB;AAExB,uEAAuE;AACvE,kEAAkE;AAClE,YAAY;AAEZ,0DAA0D;AAC1D,4BAA4B;AAC5B,IAAI;AAQJ,0BAA0B;AAC1B,yBAAyB;AACzB,uBAAuB;AACvB,QAAQ;AACR,qCAAqC;AACrC,iCAAiC;AACjC,4BAA4B;AAC5B,6BAA6B;AAE7B,oDAAoD;AACpD,0CAA0C;AAC1C,YAAY;AACZ,iEAAiE;AACjE,uEAAuE;AACvE,mEAAmE;AACnE,gBAAgB;AAChB,0CAA0C;AAC1C,2FAA2F;AAC3F,0FAA0F;AAC1F,qBAAqB;AACrB,gBAAgB;AAChB,aAAa;AAEb,2CAA2C;AAC3C,6CAA6C;AAE7C,uBAAuB;AACvB,QAAQ;AACR,MAAM;AAEN,uBAAuB;AACvB,2BAA2B;AAC3B,uCAAuC;AAGvC,wBAAwB;AACxB,iBAAiB;AACjB,MAAM","sourcesContent":["import { ClientApp } from \"./../../src/index\";\nimport { ScoreBoardViewModel } from \"./components/score-board/score-board-view-model\";\n\nconsole.log(document.getElementById(\"score-board-view.html\"));\n\n\nconst app = new ClientApp(\"#app\")\n    .registerComponents(ScoreBoardViewModel);\n    \napp.bootstrap();\n\n\n\n\n\n\n\n\n\n\n\n// import Vue from \"vue\";\n// import \"./../../node_modules/vue/dist/vue\";\n\n// declare var Vue: any;\n// const Vue = require(\"./vue.js\");\n\n\n// class PropertyInfo\n// {\n//     private _name: string;\n//     private _descriptor: PropertyDescriptor;\n    \n    \n//     public get name(): string { return this._name; }\n//     public get descriptor(): PropertyDescriptor { return this._descriptor; }\n    \n    \n//     public constructor(name: string, descriptor: PropertyDescriptor)\n//     {\n//         this._name = name;\n//         this._descriptor = descriptor;\n//     }\n// }    \n\n\n// function getPropertyNames(val: any): Array<string>\n// {\n//     let propertyNames = new Array<string>();\n//     let prototype = Object.getPrototypeOf(val);\n//     if (prototype === undefined || prototype === null)  // we are dealing with Object\n//         return propertyNames;\n\n//     propertyNames.push(...Object.getOwnPropertyNames(val));\n//     propertyNames.push(...getPropertyNames(prototype));\n//     return propertyNames;\n// }\n\n// function prepareVm(vm: any): void\n// {\n//     let propertyNames = getPropertyNames(vm);\n//     for (let name of propertyNames)\n//     {\n//         if (name === \"constructor\" || name.indexOf(\"_\") === 0)\n//             continue;\n\n//         let value = vm[name];\n//         if (typeof (value) !== \"function\")\n//             continue;\n\n//         vm[name] = (<Function>value).bind(vm);\n//     }\n// }\n\n// function getPropertyInfos(val: any): Array<PropertyInfo>\n// {\n//     let propertyInfos = new Array<PropertyInfo>();\n//     let prototype = Object.getPrototypeOf(val);\n//     if (prototype === undefined || prototype === null)  // we are dealing with Object\n//         return propertyInfos;\n        \n//     let propertyNames = Object.getOwnPropertyNames(val);\n//     for (let name of propertyNames)\n//     {\n//         if (name === \"constructor\" || name.indexOf(\"_\") === 0)\n//             continue;\n        \n//         let descriptor = Object.getOwnPropertyDescriptor(val, name);\n//         propertyInfos.push(new PropertyInfo(name, descriptor));\n//     }    \n    \n//     propertyInfos.push(...getPropertyInfos(prototype));\n//     return propertyInfos;\n// }\n\n\n\n\n\n  \n\n// Vue.component(\"root\", {\n//     template: \"#root\",\n//     data: function()\n//     {\n//         let vm = new ViewModel(5);\n//         let data = { vm: vm };\n//         let methods = {};\n//         let computed = {};\n        \n//         let propertyInfos = getPropertyInfos(vm);\n//         for (let info of propertyInfos)\n//         {\n//             if (typeof (info.descriptor.value) === \"function\")\n//                 methods[info.name] = info.descriptor.value.bind(vm);\n//             else if (info.descriptor.get || info.descriptor.set)\n//             {\n//                 computed[info.name] = {\n//                     get: info.descriptor.get ? info.descriptor.get.bind(vm) : undefined,\n//                     set: info.descriptor.set ? info.descriptor.set.bind(vm) : undefined\n//                 };\n//             }\n//         } \n        \n//         this.$options.methods = methods;\n//         this.$options.computed = computed;\n        \n//         return data;\n//     }\n// });\n\n// console.log(\"c\", c);\n// let cinstance = new c();\n// console.log(\"cinstacne\", cinstance);\n\n\n// const app = new Vue({\n//     el: \"#app\"\n// });\n\n"]}